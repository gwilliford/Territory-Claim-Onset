beep(8)
?prais_winsten
tm1 <- prais_winsten(lntrade ~ ldyterrclaim + lngdp1 + lngdp2 + lnpop1 + lnpop2 + contdir + ldefense + mid + lcaprat + polity21 * polity22, data = a)  #.662/.93
tm1 <- prais_winsten(lntrade ~ ldyterrclaim + laglngdp1 + laglngdp2 + laglngdpcap1 + laglngdcap2 + contdir + lnccdist + ldefense + mid + lcaprat + polity21 * polity22, data = a)  #.662/.93
tm1 <- prais_winsten(lntrade ~ ldyterrclaim + laglngdp1 + laglngdp2 + laglngdpcap1 + laglngdpcap2 + contdir + lnccdist + ldefense + mid + lcaprat + polity21 * polity22, data = a)  #.662/.93
a <- na.omit(with(dat, cbind(dyad, year, lntrade, ldyterrclaim, laglngdp1, laglngdp2, laglngdpcap1, laglngdpcap2, contdir, ldefense, mid, lcaprat, polity21, polity22, ccdist)))
a <- na.omit(with(dat, cbind(dyad, year, lntrade, ldyterrclaim, laglngdp1, laglngdp2, laglngdpcap1, laglngdpcap2, contdir, ldefense, mid, lcaprat, polity21, polity22, lnccdist)))
tm1 <- prais_winsten(lntrade ~ ldyterrclaim + laglngdp1 + laglngdp2 + laglngdpcap1 + laglngdpcap2 + contdir + lnccdist + ldefense + mid + lcaprat + polity21 * polity22, data = a)  #.662/.93
summary(tm1)
tm1 <- prais_winsten(lntrade ~ ldyterrclaim + laglngdp1 + laglngdp2 + laglngdpcap1 + laglngdpcap2 + contdir + lnccdist + ldefense + mid + lcaprat + polity21 * polity22, data = a, index = c("dyad", "year"))  #.662/.93
summary(tm1)
dim(a)
#
a <- na.omit(with(dat, cbind(dyad, year, lntrade, ldyterrclaim, laglngdp1, laglngdp2, laglngdpcap1, laglngdpcap2, contdir, ldefense, mid, lcaprat, polity21, polity22)))
dim(a)
tm1 <- prais_winsten(lntrade ~ ldyterrclaim + laglngdp1 + laglngdp2 + laglngdpcap1 + laglngdpcap2 + contdir + ldefense + mid + lcaprat + polity21 * polity22, data = a, index = c("dyad", "year"))
summary(tm1)
pw <- tm1
# Panel stationarity test
library(plm)
install.packages("plm")
# Panel stationarity test
library(plm)
purtest(lntrade ~ 1, data = a, index = c("dyad", "year"), pmax = 4, test = "madwu")
a$lntrade
a <- na.omit(with(dat, cbind(dyad, year, lntrade, ldyterrclaim, laglngdp1, laglngdp2, laglngdpcap1, laglngdpcap2, contdir, ldefense, mid, lcaprat, polity21, polity22)))
dim(a)
purtest(lntrade ~ 1, data = a, index = c("dyad", "year"), pmax = 4, test = "madwu")
purtest(lntrade ~ 1, data = dat, index = c("dyad", "year"), pmax = 4, test = "madwu")
#
a <- as.data.frame(na.omit(with(dat, cbind(dyad, year, lntrade, ldyterrclaim, laglngdp1, laglngdp2, laglngdpcap1, laglngdpcap2, contdir, ldefense, mid, lcaprat, polity21, polity22))))
purtest(lntrade ~ 1, data = a, index = c("dyad", "year"), pmax = 4, test = "madwu")
tsline
tsplot
install.packages("punitroots")
?pdata.frame
a <- pdata.frame(a, index = c("dyad","year"))
table(index(a), useNA = "ifany")
purtest(lntrade ~ 1, data = a, index = c("dyad", "year"), pmax = 4, test = "madwu")
duplicated(dat[, c("dyad", "year")])
sum(duplicated(dat[, c("dyad", "year")]))
sum(duplicated(ddy[, c("dyad", "year")]))
ddy <- select(dtrade, ccode1, ccode2, dyad, year, flow1, flow2, smoothflow1, smoothflow2, smoothtotrade)
library(readr)
library(readxl)
library(haven)
library(dplyr)
library(matrixStats)
library(lme4)
library(countrycode)
# Estimating Unrealized Gains from Trade
setwd("C:/Users/gwill/Dropbox/Research/Dissertation/Data Analysis - Trade Models")
ddy <- select(dtrade, ccode1, ccode2, dyad, year, flow1, flow2, smoothflow1, smoothflow2, smoothtotrade)
sum(duplicated(ddy[, c("dyad", "year")]))
ddy <- full_join(ddy, select(ddist, dyad, year, ccdistance, mindistance))
sum(duplicated(ddy[, c("dyad", "year")]))
ddy <- full_join(ddy, icow_full_dyr)
sum(duplicated(ddy[, c("dyad", "year")]))
ddy <- full_join(ddy, select(dally, dyad, year, defense, neutrality, nonaggression, entente))
sum(duplicated(ddy[, c("dyad", "year")]))
duplicated(dally[, c("dyad, year")])
duplicated(dally[, c("dyad", "year")])
sum(duplicated(dally[, c("dyad", "year")]))
dally <- dally %>% group_by(dyad, year) %>% (
sumdally <- sum(defense)
)
dally <- dally %>% group_by(dyad, year) %>% summarize(
sumdally <- sum(defense)
)
ddy <- select(dtrade, ccode1, ccode2, dyad, year, flow1, flow2, smoothflow1, smoothflow2, smoothtotrade)
ddy <- full_join(ddy, select(ddist, dyad, year, ccdistance, mindistance))
ddy <- full_join(ddy, select(dcont, dyad, year, conttype))
ddy <- full_join(ddy, icow_full_dyr)
ddy <- full_join(ddy, select(dally, dyad, year, defense, neutrality, nonaggression, entente))
ddy <- full_join(ddy, dmiddy)
summary(ddy)
dim(ddy)
sum(duplicated(ddy[, c("dyad", "year")]))
######### Merge dyadic and monadic data ###########
dat <- left_join(ddy, dmon1)
dat <- left_join(dat, dmon2)
# Create trade variables
dat$trade = dat$flow1 + dat$flow2
dat$lntrade = ifelse(dat$trade == 0, 0, log(dat$trade))
dat <- ungroup(dat %>% group_by(dyad, year) %>% mutate(
# Trade variables
sflow1 = sum(flow2),
sflow2 = sum(flow1),
# tsym = tdepdy1/tdepdy2, # Values above 0 indicate that 1 is more dependent on trade than 2
# tsym = ifelse(is.infinite(tsym), 0, tsym)
#
))
dat$tdeptot1 = dat$sflow2/dat$gdp1
dat$tdeptot2 = dat$sflow1/dat$gdp2
dat$tdepdy1 = dat$flow2/dat$gdp1 #tdepdy1 is 1's dependence on 2 (exports/gdpcap)
dat$tdepdy2 = dat$flow1/dat$gdp2 # higher values indicate that 2 is more dependent on trade
# Total GDP variables
dat$gdpt = dat$gdp1 + dat$gdp2
dat$lngdpt = log(dat$gdpt)
dat$gdpcapt = dat$gdpcap1 + dat$gdpcap2
dat$lngdpcapt = log(dat$gdpcapt)
# Other variables
dat$lnccdist <- ifelse(dat$ccdistance == 0, 0, log(dat$ccdistance))
dat$conttype[is.na(dat$conttype)] <- 6
dat$contdir <- ifelse(dat$conttype == 1, 1, 0)
dat$dyterrclaim <- ifelse(!is.na(dat$dyterrclaim), 1, 0)
dat$lnccdist <- ifelse(dat$ccdistance == 0, 0, log(dat$ccdistance))
dat$defense <- ifelse(is.na(dat$defense), 0, dat$defense)
dat$mid <- ifelse(is.na(dat$mid), 0, 1)
dat$caprat <- rowMaxs(cbind(dat$cinc1, dat$cinc2)) / (dat$cinc1 + dat$cinc2)
dat$demdy <- ifelse(dat$polity21 > 5 & dat$polity22 > 5, 1, 0)
# Lags
dat <- dat %>% arrange(dyad, year) %>% mutate(
lcaprat = lag(caprat),
lgdpcap1a = lag(gdpcap1),
lgdpcap2a = lag(gdpcap2),
lgdpcapt = lag(gdpcapt),
#laglngdpcap1 = lag(lngdpcap1),
#laglngdpcap2 = lag(lngdpcap2),
laglngdpcapt = lag(lngdpcapt),
ltrade = lag(trade),
laglntrade = lag(lntrade),
ltdeptot1 = lag(tdeptot1),
ltdeptot2 = lag(tdeptot2),
ltdepdy1 = lag(tdepdy1),
ltdepdy2 = lag(tdepdy2),
lmid = lag(mid),
ldyterrclaim = lag(dyterrclaim),
ldemdy = lag(demdy),
ldefense = lag(defense)
)
# dat$ldemdy2 <- ifelse(dat$lpol1 > 5 & dat$lpol2 > 5, 1, 0)
dally <- dally %>% group_by(dyad, year) %>% summarize(
defense <- sum(defense)
)
dally <- read_csv("alliance_v4.1_by_dyad_yearly.csv")
dally$dyad <- undirdyads(dally, ccode1, ccode2)
dally <- dally %>% group_by(dyad, year) %>% summarize(
defense <- sum(defense)
)
dally <- read_csv("alliance_v4.1_by_dyad_yearly.csv")
dally$dyad <- undirdyads(dally, ccode1, ccode2)
### Alliance data
dally <- read_csv("alliance_v4.1_by_dyad_yearly.csv")
setwd("C:/Users/gwill/Dropbox/Research/Dissertation/Data Analysis - Trade Models")
tm1 <- lmer(lntrade ~ ldyterrclaim + lngdp1 + lngdp2 + lnpop1 + lnpop2 + contdir + ldefense + mid + lcaprat + polity21 * polity22 + (1 | dyad), data = dat); summary(tm1) #  .662/.93
r.squaredGLMM(tm1)
# Lags
dat <- dat %>% arrange(dyad, year) %>% mutate(
lcaprat = lag(caprat),
lgdpcap1a = lag(gdpcap1),
lgdpcap2a = lag(gdpcap2),
lgdpcapt = lag(gdpcapt),
#laglngdpcap1 = lag(lngdpcap1),
#laglngdpcap2 = lag(lngdpcap2),
laglngdpcapt = lag(lngdpcapt),
ltrade = lag(trade),
laglntrade = lag(lntrade),
ltdeptot1 = lag(tdeptot1),
ltdeptot2 = lag(tdeptot2),
ltdepdy1 = lag(tdepdy1),
ltdepdy2 = lag(tdepdy2),
lmid = lag(mid),
ldyterrclaim = lag(dyterrclaim),
ldemdy = lag(demdy),
ldefense = lag(sdally)
)
names(ddy)
ddy <- full_join(ddy, select(dally, dyad, year, defense, neutrality, nonaggression, entente))
dally <- dally %>% group_by(dyad, year) %>% summarize(
defense = sum(defense)
)
rm(ls = ())
rm(ls = (-dat))
rm(ls = ())
rm(list = ls())
setwd("C:/Users/gwill/Dropbox/Research/Dissertation/Data Analysis - Trade Models")
setwd("C:/Users/gwill/Dropbox/Research/Dissertation/Data Analysis - Trade Models")
setwd("C:/Users/gwill/Dropbox/Research/Dissertation/Data Analysis - Trade Models")
setwd("C:/Users/gwill/Dropbox/Research/Dissertation/Data Analysis - Trade Models")
mad <- read_excel("mpd2018.xlsx", sheet = "Full data", n_max = 19357)
mad$ccode <- as.numeric(with(mad, countrycode(countrycode, 'iso3c', 'cown')))
mad$gdp <- mad$rgdpnapc/mad$pop
mad <- filter(mad, !is.na(ccode))
dcap = read_dta("NMC_5_0.dta")
dpol = read_excel("p4v2016.xls")
dw   = read_dta("bdm2s2_nation_year_data_may2002.dta")
# Merge Monadic Data
#dmon = select(gdp, ccode, year, gdpcap, lgdpcap)
dmon = full_join(mad, dcap)
dmon = full_join(dmon, select(dpol, ccode, year, polity2))
dmon = full_join(dmon, select(dw, ccode, year, W, S))
dmon = full_join(dmon, mad)
# Check for duplicates
# sum(duplicated(dmon[, c("ccode", "year")]))
# dmon[duplicated(dmon[, c("ccode", "year")]),]
dmon$lngdp <- log(dmon$gdp)
names(dmon$rgdpnapc) <- "gdpcap"
dmon <- rename(dmon, gdpcap = rgdpnapc)
dmon$lngdpcap <- log(dmon$gdpcap)
dmon$lnpop <- log(dmon$pop)
dmon <- dmon %>% arrange(ccode, year) %>% mutate(
lgdpcap = lag(gdpcap),
lpol = lag(polity2),
lpop = lag(pop),
lgdp = lag(gdp),
lcinc = lag(cinc),
lagW = lag(W),
lagS = lag(S),
laglngdp = lag(lngdp),
laglngdpcap = lag(lngdpcap),
laglnpop = lag(lnpop)
)
# Create separate versions of monadic data
dmon1 = dmon %>% select(-"version") %>% setNames(paste0(names(.), "1")) %>% rename(year = year1)
dmon2 = dmon %>% select(-"version") %>% setNames(paste0(names(.), "2")) %>% rename(year = year2)
########### DYADIC DATA ##########
### Create common identifiers for dyadic data
undirdyads <- function(df, ccode1, ccode2) {
attach(df)
ccodes = cbind(ccode1, ccode2)
cmin   = sprintf("%03d", matrixStats::rowMins(ccodes))
cmax   = sprintf("%03d", matrixStats::rowMaxs(ccodes))
dyad = as.numeric(paste(cmin, cmax, sep = ""))
detach(df)
return(dyad)
}
### Trade Data
dtrade <- read_csv("Dyadic_COW_4.0.csv")
dtrade$dyad = undirdyads(dtrade, ccode1, ccode2)
dtrade$flow1 <- ifelse(dtrade$flow1 < 0, NA, dtrade$flow1)
dtrade$flow2 <- ifelse(dtrade$flow2 < 0, NA, dtrade$flow2)
dtrade$smoothtotrade <- ifelse(dtrade$smoothtotrade < 0, NA, dtrade$smoothtotrade)
### Distance data
ddist  <- read_csv("COW_Distance_NewGene_Export.csv")
ddist$dyad <- undirdyads(ddist, ccode1, ccode2)
### Contiguity Data
dcont  <- read_csv("COW_Contiguity_NewGeneExport.csv")
dcont$dyad <- undirdyads(dcont, ccode1, ccode2)
dcont <- dcont[dcont$ccode1 < dcont$ccode2, ]
# dcont$dup <- duplicated(dcont[, c("dyad", "year")])
# dsub <- dcont[dcont$dup == 1, ]
# duplicated(dcont[, c("dyad", "year")])
# dsub <- dcont[order("dyad", "year"), ]
# dsub <- arrange(dcont, dyad, year)
### ICOW global territory claim year data
icow_full_cyr  = read_csv("ICOWprovyr101.csv")
# Collapse to dyad year
icow_full_dyr = icow_full_cyr %>% group_by(dyad, year) %>% summarize(
dyterrclaim = 1
)
### Alliance data
dally <- read_csv("alliance_v4.1_by_dyad_yearly.csv")
dally$dyad <- undirdyads(dally, ccode1, ccode2)
dally <- dally %>% group_by(dyad, year) %>% summarize(
defense = sum(defense)
)
# Estimating Unrealized Gains from Trade
setwd("C:/Users/gwill/Dropbox/Research/Dissertation/Data Analysis - Trade Models")
# Estimating Unrealized Gains from Trade
setwd("C:/Users/gwill/Dropbox/Research/Dissertation/Data Analysis - Trade Models")
install.packages(c("coefplot", "splitstackshape"))
library(readstata13)
library(splitstackshape)
library(plyr)
library(tvcure)
library(coxphf)
library(xtable)
library(stargazer)
library(coefplot)
options(scipen = 999)
lhr <- read.dta13("C:/Users/gwill/Dropbox/Methods Notes/Survival Analysis/Cure Models Paper/Replication - LHR 2008/lhrIOOct08replication.dta")
lhr <- rename(lhr, replace = c("_st" = "st", "_d" = "event", "_t" = "stop", "_t0" = "start"))
expand.grid(c(-10:10), c(-10:10))
a <- expand.grid(c(-10:10), c(-10:10))
a$Var3 <- a$Var1 * a$Var2
View(a)
a <- expand.grid(c(1:21), c(1:21))
a$Var3 <- a$Var1 * a$Var2
a <- expand.grid(c(2:22), c(2:22))
a$Var3 <- a$Var1 * a$Var2
a <- y ~ x + b
a
ag_ln_depdymax + lag_ln_deptotmax + lag_ln_gdpcap1 + lag_ln_gdpcap2 +
setwd('C:/Users/gwill/Dropbox/RA Work/Civ War List')
library(readr)
library(readxl)
library(XLConnect)
library(readstata13)
library(dplyr)
library(statar)
library(plm)
library(data.table)
source('C:/Users/gwill/Dropbox/Research/Dissertation/tvcure/Other Software/Peng and Taylor Residuals/Residuals testing.R')
a <- c(0, 1)
a *3''
a * 3
sqrt(2048)
a <- c(708, 1426, 930)
library(ggplot2)
ggplot(aes(y = a)) + geom_barplot()
?ggplot
ggplot(mapping = aes(y = a)) + geom_barplot()
?geom_bar
ggplot(mapping = aes(y = a)) + geom_bar()
ggplot(mapping = aes(a)) + geom_bar()
a
a <- rbind(c(1, 2, 3), c(708, 1426, 930))
ggplot(mapping = aes(a)) + geom_bar()
ggplot(mapping = aes(x = 1, y = a)) + geom_bar()
?geom_bar
ggplot(mapping = aes(a)) + geom_bar()
b <- c(708, 1426, 930)
a <- c(1, 2, 3)
ggplot(mapping = aes(x = a, y = b)) + geom_bar()
ggplot(mapping = aes(b)) + geom_bar()
ggplot(mapping = aes(a)) + geom_bar()
df <- data.frame(x = rep(c(2.9, 3.1, 4.5), c(5, 10, 4)))
ggplot(df, aes(x)) + geom_bar()
df <- data.frame(x = rep(c(1, 2, 3), c(708, 1426, 930))
)
df
ggplot(mapping = aes(a)) + geom_bar()
ggplot(mapping = aes(df)) + geom_bar()
ggplot(df, mapping = aes(x)) + geom_bar()
a <- ggplot(df, mapping = aes(x)) + geom_bar()
a <- ggplot(df, mapping = aes(x, fill = x)) + geom_bar()
a
a <- ggplot(df, mapping = aes(x, colour = x)) + geom_bar()
a
a <- ggplot(df, mapping = aes(x, color = x)) + geom_bar()
a
a
df
names(df)
head(df)
df <- data.frame(x = rep(c(1, 2, 3), y = c(708, 1426, 930)))
a <- ggplot(df, mapping = aes(x, y, color = x)) + geom_bar()
a
a <- ggplot(df, mapping = aes(x = x, y = y, color = x)) + geom_bar()
a
df <- data.frame(x = rep(c(1, 2, 3), y = c(708, 1426, 930)))
a
df
df <- data.frame(x = c(1, 2, 3), y = c(708, 1426, 930))
a <- ggplot(df, mapping = aes(x = x, y = y, color = x)) + geom_bar()
a
a <- ggplot(df, mapping = aes(x = x, y = y, color = x)) + geom_bar()
a
a <- ggplot(df, mapping = aes(x)) + geom_bar()
gas
a
a <- ggplot(df, mapping = aes(b)) + geom_bar()
a
2099+130+266+130
2625+250
2099_657+130
2099+657+130
setwd("C:/Users/gwill/Dropbox/Research/Dissertation/Data Analysis - Territory Onset")
library(readstata13)
library(tvcure)
options(scipen = 999)
cl <- makeCluster(3, "SOCK")
registerDoSNOW(cl)
eu3 = read.dta13("./data/eu3.dta")
summary(eu3)
sort(names(eu3))
j = tvcure(Surv(start, stop, fail) ~ lpchcap + leadtransany + lcwany,
cureform = ~ I(lcaprat^2) + ldemdy + lally + lrival,
data = eu3, subset = eu3$contdir == 1,
brglm = T,
var = T, nboot = 100); summary(j)
j = tvcure(Surv(start, stop, fail) ~ lpchcap + leadtransany + lcwany,
cureform = ~ lcaprat + I(lcaprat^2) + ldemdy + lally + lrival,
data = eu3, subset = eu3$contdir == 1,
brglm = T,
var = T, nboot = 100); summary(j)
j = tvcure(Surv(start, stop, fail) ~ lpchcap + leadtransany + lcwany,
cureform = ~ lcaprat + I(lcaprat^2) + majpower + ldemdy + lally + lrival,
data = eu3, subset = eu3$contdir == 1,
brglm = T,
var = T, nboot = 100); summary(j)
j = tvcure(Surv(start, stop, fail) ~ lpchcap + leadtransany + lcwany,
cureform = ~ lcaprat + majpower + ldemdy + lally + lrival,
data = eu3, subset = eu3$contdir == 1,
brglm = T,
var = T, nboot = 100); summary(j)
sum(eu3$contdir)
sum(eu3$contdir, na.rm = T)
sum(eu3$contig == 1, na.rm = T)
dim(eu3)
eu3 = eu3 %>% mutate(
lagleadch_chisols = lag(leadtransany)
)
library(dplyr)
eu3 = eu3 %>% mutate(
lagleadch_chisols = lag(leadtransany)
)
j = tvcure(Surv(start, stop, fail) ~ lpchcap + lagleadch_chisols + lcwany,
cureform = ~ lcaprat + majpower + ldemdy + lally + lrival,
data = eu3, subset = eu3$contdir == 1,
brglm = T,
var = T, nboot = 100); summary(j)
eu3 = eu3 %>% mutate(
lagsolsch = lag(solschany),
lagleadch_chisols = lag(leadtransany)
)
j = tvcure(Surv(start, stop, fail) ~ lpchcap + lagsolsch + lcwany,
cureform = ~ lcaprat + majpower + ldemdy + lally + lrival,
data = eu3, subset = eu3$contdir == 1,
brglm = T,
var = T, nboot = 100); summary(j)
cor(eu3[, "lagsolsch", "eu3$lagleadch_chisols"], )
eu3$contdir == 1
cor(eu3[, ("lagsolsch", "eu3$lagleadch_chisols")], use = "complete.obs")
cor(cbind(eu3$lagsolsch, eu3$lagleadch_chisols)j, use = )
cor(cbind(eu3$lagsolsch, eu3$lagleadch_chisols), use = "complete.cases")
cor(cbind(eu3$lagsolsch, eu3$lagleadch_chisols), use = "complete.obs")
k = tvcure(Surv(start, stop, fail) ~ lpchcap + lagsolsch + lcwany,
cureform = ~ contig + lcaprat + majpower + ldemdy + lally + lrival,
data = eu3, subset = eu3$contdir == 1,
brglm = T,
var = T, nboot = 100); summary(k)
l = tvcure(Surv(start, stop, fail) ~ lpchcap + lagleadch_chisols + lcwany,
cureform = ~ contig + lcaprat + majpower + ldemdy + lally + lrival,
data = eu3,
brglm = T,
var = T, nboot = 100); summary(l)
k = tvcure(Surv(start, stop, fail) ~ lpchcap + lagsolsch + lcwany,
cureform = ~ contig + lcaprat + majpower + ldemdy + lally + lrival,
data = eu3, subset = eu3$contdir == 1,
brglm = T,
var = T, nboot = 100); summary(k)
l = tvcure(Surv(start, stop, fail) ~ lpchcap + lagleadch_chisols + lcwany,
cureform = ~ contig + lcaprat + majpower + ldemdy + lally + lrival,
data = eu3,
brglm = T,
var = T, nboot = 100); summary(l)
beepr::beep(8)
m = tvcure(Surv(start, stop, fail) ~ lpchcap + lagleadch_chisols + lcwany,
cureform = ~ contig + lcaprat + majpower + lsamereg + lally + lrival,
data = eu3,
brglm = T,
var = T, nboot = 100); summary(m)
m = tvcure(Surv(start, stop, fail) ~ lpchcap + lcaprat + lagleadch_chisols + lcwany,
cureform = ~ contig + majpower + lsamereg + lally + lrival,
data = eu3,
brglm = T,
var = T, nboot = 100); summary(m)
n = tvcure(Surv(start, stop, fail) ~ lpchcap + lcaprat + lagleadch_chisols + lcwany,
cureform = ~ contig + majpower + lsamereg + lally + lrival,
data = eu3, subset = eu3$contdir == 1,
brglm = T,
var = T, nboot = 100); summary(n)
o = tvcure(Surv(start, stop, fail) ~ lpchcap + lagleadch_chisols + lcwany,
cureform = ~ contig + majpower + lsamereg + lally + lrival,
data = eu3,
brglm = T,
var = T, nboot = 100); summary(o)
n = tvcure(Surv(start, stop, fail) ~ lpchcap + lcaprat + lagleadch_chisols + lcwany,
cureform = ~ majpower + lsamereg + lally + lrival,
data = eu3, subset = eu3$contdir == 1,
brglm = T,
var = T, nboot = 100); summary(n)
n = tvcure(Surv(start, stop, fail) ~ lpchcap + lagleadch_chisols + lcwany,
cureform = ~ majpower + lsamereg + lally + lrival,
data = eu3, subset = eu3$contdir == 1,
brglm = T,
var = T, nboot = 100); summary(n)
o = tvcure(Surv(start, stop, fail) ~ lpchcap + lagleadch_chisols + lcwany,
cureform = ~ contig + majpower + lsamereg + lally + lrival,
data = eu3,
brglm = T,
var = T, nboot = 100); summary(o)
p = tvcure(Surv(start, stop, fail) ~ lpchcap + lagleadch_chisols + lcwany,
cureform = ~ contig + majpower + lsamereg + lally + lrival + lag_dee,
data = eu3,
brglm = T,
var = T, nboot = 100); summary(p)
p = tvcure(Surv(start, stop, fail) ~ lpchcap + lagleadch_chisols + lcwany,
cureform = ~ contig + majpower + lsamereg + lally + lrival + lagdee2,
data = eu3,
brglm = T,
var = T, nboot = 100); summary(p)
p = tvcure(Surv(start, stop, fail) ~ lpchcap + lagleadch_chisols + lcwany,
cureform = ~ contig + majpower + lsamereg + lally + lrival + lagdee2,
data = eu3,
brglm = T,
var = T, nboot = 100); summary(p)
summary(eu3$capmax)
setwd("C:/Users/gwill/Dropbox/Research/Dissertation/Data Analysis - Territory Onset")
library(readstata13)
library(tvcure)
options(scipen = 999)
cl <- makeCluster(3, "SOCK")
registerDoSNOW(cl)
eu3 = read.dta13("./data/eu3.dta")
eu3 = eu3 %>% mutate(
lagsolsch = lag(solschany),
lagleadch_chisols = lag(leadtransany)
)
library(dplyr)
eu3 = eu3 %>% mutate(
lagsolsch = lag(solschany),
lagleadch_chisols = lag(leadtransany)
)
names(eu3)
eu3 = eu3 %>%
group_by(dyad) %>%
mutate(
mindyadyear = min(year)
)
